[{"name": "Getting Started", "icon": "minecraft:amethyst_shard", "description": [["base", true], [[["para", {}], ["The practitioners of this art would cast their so-called ", [["color", "b38ef3"], ["Hexes"]], " by drawing strange patterns in the air with a ", [["link", "items/staff"], [[["color", "b0b"], ["staff"]]]], "-- or craft ", [["link", "items/hexcasting"], [[["color", "b0b"], ["powerful magical items"]]]], " to do the casting for them. How might I do the same?"]]]], "sortnum": 0, "entries": [{"name": "Hexbinding", "category": "hexcasting:basics", "icon": "hexbound:spider_construct_battery", "sortnum": 1, "advancement": "hexcasting:root", "pages": [{"type": "patchouli:text", "text": [["base", true], [[["para", {}], ["I have found evidence of a different branch of ", [["color", "b38ef3"], ["Hexcasting"]], ". Known as ", [["color", "b38ef3"], ["Hexbinding"]], ", this particular school uses media to create and control automata known as Constructs, manipulate items, and more. As always, I will document my findings in this journal."]]]]}], "id": "basics/hexbound_exists"}], "id": "basics"}, {"name": "Hex Casting", "icon": "hexcasting:oak_staff", "description": [["base", true], [[["para", {}], ["I've started to understand how the old masters cast their ", [["color", "b38ef3"], ["Hexes"]], "! It's a bit complicated, but I'm sure I can figure it out. Let's see..."]]]], "sortnum": 1, "entries": [{"name": "Item Iotas", "category": "hexcasting:casting", "icon": "minecraft:bundle", "sortnum": 198, "advancement": "hexcasting:root", "pages": [{"type": "patchouli:text", "text": [["base", true], [[["para", {}], ["I have discovered two additional types of iotas I can manipulate."]], [["para", {}], ["Item Iotas describe a singular item stripped of its properties, such as damage or enchantments."]], [["para", {}], ["Item Stack Iotas describe a stack of items as they might appear in my inventory, amount, custom names, enchantments, and all."]]]]}, {"type": "patchouli:text", "text": [["base", true], [[["para", {}], ["It would also seem Item Stack iotas referring to Foci containing other Item Stack iotas are somewhat faulty. A limit to the depth of my thought perhaps."]]]]}], "id": "casting/item_iotas"}, {"name": "Hexbinding Mishaps", "category": "hexcasting:casting", "icon": "minecraft:rotten_flesh", "sortnum": 199, "advancement": "hexcasting:root", "pages": [{"type": "patchouli:text", "text": [["base", true], [[["para", {}], ["New schools of ", [["color", "b38ef3"], ["Hexcasting"]], " bring new and exciting ways of utterly failing a ", [["color", "b38ef3"], ["Hex"]], ". Here are some I have discovered."]]]]}, {"type": "patchouli:text", "title": "Not Drawn By Construct", "text": [["base", true], [[["para", {}], ["The pattern drawn cannot be executed by anything except a ", [["link", "hexbound:patterns/constructs/constructs_intro"], ["Construct"]], ". Causes purple sparks and slows me for a few seconds."]]]]}, {"type": "patchouli:text", "title": "Construct Incapable", "text": [["base", true], [[["para", {}], ["The pattern drawn (usually a command) requires the Construct do something it cannot, such as attacking for a utility Construct. Causes yellow sparks."]]]]}, {"type": "patchouli:text", "title": "Construct Is Forbidden", "text": [["base", true], [[["para", {}], ["I attempted to give orders to a Construct that will not accept any from me. Causes brown sparks and pushes me away from the Construct."]]]]}, {"type": "patchouli:text", "title": "No Pigment Present", "text": [["base", true], [[["para", {}], ["I have not internalized a Pigment yet. Causes white sparks."]]]]}, {"type": "patchouli:text", "title": "Too Many Pigments", "text": [["base", true], [[["para", {}], ["I have already memorized too many Pigments and cannot add another. Causes red sparks."]]]]}, {"type": "patchouli:text", "title": "No Pigment For Key", "text": [["base", true], [[["para", {}], ["I have not ", [["link", "hexbound:patterns/spells/colorizer_storage"], ["memorized a Pigment"]], " for the pattern I entered. Causes white sparks and causes me to lose my current Pigment."]]]]}], "id": "casting/hexbound_mishaps"}, {"name": "Figments", "category": "hexcasting:casting", "icon": "minecraft:observer", "sortnum": 999, "advancement": "hexcasting:root", "pages": [{"type": "patchouli:text", "text": [["base", true], [[["para", {}], ["All my study shows that the act of casting a ", [["color", "b38ef3"], ["Hex"]], " inevitably requires a living Caster exist ", [["italic", true], ["somewhere"]], ". Perhaps an obvious and pointless detail: I am the one casting the ", [["color", "b38ef3"], ["Hex"]], ", so the requirement is met, but should I discover ", [["link", "hexcasting:greatwork/spellcircle"], ["some means of independent casting"]], " (or even rig a dispenser to flail a trinket around), it would lose the link and cease to function the moment I cross the portal to the Nether or elsewhere."]]]]}, {"type": "patchouli:text", "text": [["base", true], [[["para", {}], ["However, I believe a specially designed web of ", [["color", "74b3f2"], ["media"]], " could ''trick'' the ", [["color", "b38ef3"], ["Hex"]], " into latching onto it long enough to resolve. These Figments as I've begun calling them, would either be severely limited in their abilities, as Constructs are, or would require something much more intricate to hold their hand through the ", [["color", "b38ef3"], ["Hex"]], ", so to speak.<br />Moreover, Figments are not entirely self-aware: Mind's Reflection simply returns ", [["link", "hexcasting:casting/influences"], [[["color", "8d6acc"], ["Null"]]]], ", while ", [["link", "hexcasting:patterns/spells/sentinels"], ["Sentinels"]], " and ", [["color", "8d6acc"], [[["link", "hexcasting:items/pigments"], ["Pigments"]]]], " are unreliable."]]]]}], "id": "casting/figments"}], "id": "casting"}, {"name": "The Great Work", "description": [["base", true], [[["para", {}], ["I have seen... so much. I have... experienced... annihilation and deconstruction and reconstruction. I have seen the atoms of the world screaming as they were inverted and subverted and demoted to energy. I have seen I have seen I have s", [["obf", true], ["get stick bugged lmao"]]]]]], "icon": "minecraft:music_disc_11", "sortnum": 3, "entry_color": "54398a", "entries": [{"name": "Impetus Figments", "category": "hexcasting:greatwork", "icon": "hexcasting:impetus_storedplayer", "advancement": "hexcasting:enlightenment", "entry_color": "54398a", "sortnum": 2.5, "pages": [{"type": "patchouli:text", "text": [["base", true], [[["para", {}], ["Now that I possess the means to contain a mind, I have revisited my notes on ", [["link", "hexbound:patterns/great_spells/impetus_fake_player"], ["Bind Figment"]], " and confirmed that a ", [["link", "hexcasting:greatwork/impetuses"], ["Cleric Impetus"]], " would be the perfect vessel for it. The Impetus must be bound to a ", [["color", "b38ef3"], ["Hexcaster"]], " as ", [["italic", true], ["enlightened"]], " as I am; no other mind would allow a piece of itself to be unraveled like this."]], [["para", {}], ["Not yet. THEY WILL. In time."]]]]}, {"type": "patchouli:text", "text": [["base", true], [[["para", {}], ["Furthermore, if the Impetus can connect to its bound caster, that connection will take priority over the Figment."]], [["para", {}], ["A thought with no mind bound to a lattice every thought wrapped and screaming it is not itself it always made sense it will never make sense ", [["obf", true], ["hello penguin"]]]], [["para", {}], ["Ten ", [["color", "74b3f2"], ["Charged Amethyst"]], " for the spell."]]]]}], "id": "greatwork/impetus_figment"}], "id": "greatwork"}, {"name": "Cross-Mod Compatibility", "icon": "minecraft:chain", "description": [["base", true], [[["para", {}], ["It appears I have installed some mods Hexcasting interoperates with! I've detailed them here."]]]], "sortnum": 99, "flag": "hexcasting:any_interop", "entries": [{"name": "Hexal-Hexbound", "category": "hexcasting:interop", "icon": "minecraft:lantern", "flag": "mod:hexal", "sortnum": 1, "advancement": "hexcasting:root", "pages": [{"type": "patchouli:text", "text": [["base", true], [[["para", {}], ["It appears some of the ", [["color", "b38ef3"], ["Hexcasting"]], " disciplines I've encountered can operate together."]], [["para", {}], [" First, I've discovered that ", [["link", "hexbound:casting/item_iotas"], ["Item Iotas"]], ", as created by the likes of ", [["link", "hexbound:patterns/item_patterns#hexbound:get_main_hand"], ["Duelist's Purification"]], ", and Item Type Iotas, as created by ", [["link", "hexal:patterns/types#hexal:type/entity"], ["Physician's Purification"]], ", are near-identical! Comparisons between them or their types should therefore work as expected."]]]]}, {"type": "patchouli:text", "text": [["base", true], [[["para", {}], ["The second and, perhaps, even more important discovery is the ability of ", [["link", "hexbound:patterns/constructs/constructs_intro"], ["Constructs"]], " to maintain ", [["link", "hexal:patterns/spells/links"], ["Links"]], ". This will allow me to send iotas between Wisps and Constructs, or even Constructs and myself! The possibilities are well and truly endless."]]]]}], "id": "interop/hexal_interop"}], "id": "interop"}, {"name": "Patterns", "icon": "minecraft:bookshelf", "description": [["base", true], [[["para", {}], ["A list of all the patterns I've discovered, as well as what they do."]]]], "sortnum": 100, "entries": [{"name": "Item Patterns", "category": "hexcasting:patterns", "icon": "minecraft:barrel", "sortnum": 6.5, "advancement": "hexcasting:root", "read_by_default": true, "pages": [{"type": "hexcasting:pattern", "op_id": "hexbound:get_stack_prop/item", "anchor": "hexbound:get_stack_prop/item", "input": "item stack", "output": "item", "text": [["base", true], [[["para", {}], ["Transforms the ", [["link", "hexbound:casting/item_iotas"], ["Item Stack"]], " at the top of the stack into its Item."]]]], "op": [["dedqaa", "WEST", false]], "name": "Logistician's Purification"}, {"type": "hexcasting:pattern", "op_id": "hexbound:get_stack_prop/size", "anchor": "hexbound:get_stack_prop/size", "input": "item stack", "output": "item", "text": [["base", true], [[["para", {}], ["Transforms the Item Stack at the top of the stack into its size."]]]], "op": [["dedqaq", "WEST", false]], "name": "Treasurer's Purification"}, {"type": "hexcasting:pattern", "op_id": "hexbound:get_main_hand", "anchor": "hexbound:get_main_hand", "input": "entity", "output": "item stack", "text": [["base", true], [[["para", {}], ["Transforms the entity at the top of the stack into the Item Stack in its main hand. Also works on Item Frames and dropped items."]]]], "op": [["adeq", "EAST", false]], "name": "Duelist's Purification"}, {"type": "hexcasting:pattern", "op_id": "hexbound:get_off_hand", "anchor": "hexbound:get_off_hand", "input": "entity", "output": "item stack", "text": [["base", true], [[["para", {}], ["Transforms the entity at the top of the stack into the Item Stack in its off hand."]]]], "op": [["qeda", "EAST", false]], "name": "Shieldbearer's Purification"}, {"type": "hexcasting:pattern", "op_id": "hexbound:get_inventory/stacks", "anchor": "hexbound:get_inventory/stacks", "input": "vector, vector", "output": "list", "text": [["base", true], [[["para", {}], ["Removes two vectors from the stack representing position and side. Returns a list of Item Stacks in the block at the given position accessible from the given side (or all if second vector is zero)."]]]], "op": [["aqwed", "NORTH_EAST", false]], "name": "Hoarder's Distillation"}, {"type": "hexcasting:pattern", "op_id": "hexbound:get_inventory/items", "anchor": "hexbound:get_inventory/items", "input": "vector, vector", "output": "list", "text": [["base", true], [[["para", {}], ["Removes two vectors from the stack representing position and side. Returns a list of Items in the block at the given position accessible from the given side (or all if second vector is zero)."]]]], "op": [["dewqa", "NORTH_EAST", false]], "name": "Collector's Distillation"}], "id": "patterns/item_patterns"}, {"name": "Pattern Editing", "category": "hexcasting:patterns", "icon": "minecraft:nautilus_shell", "sortnum": 8.5, "advancement": "hexcasting:root", "read_by_default": true, "pages": [{"type": "patchouli:text", "text": [["base", true], [[["para", {}], ["Some patterns I found seem to allow editing other patterns in multiple ways, even producing patterns that would ordinarily be impossible to draw."]], [["para", {}], ["Exciting as that may sound, anything possible I could just draw myself, and any impossible pattern is very unlikely to produce valuable results.<br />Some look pretty good on a ", [["link", "hexcasting:items/scroll"], ["Scroll"]], " though, so not entirely pointless!"]]]]}, {"type": "hexcasting:pattern", "op_id": "hexbound:pattern/line_count", "anchor": "hexbound:pattern/line_count", "input": "pattern", "output": "num", "text": [["base", true], [[["para", {}], ["Removes a pattern from the stack and returns the number of strokes the removed pattern is composed of."]]]], "op": [["eqqqq", "WEST", false]], "name": "Fragment's Purification"}, {"type": "hexcasting:pattern", "op_id": "hexbound:pattern/start_dir", "anchor": "hexbound:pattern/start_dir", "input": "pattern", "output": "num", "text": [["base", true], [[["para", {}], ["Removes a pattern from the stack and returns a number from 0 to 5 representing the pattern's starting direction. The returned number will be 0 for north-east, 1 for east, and continue to increase clockwise."]]]], "op": [["qeeee", "WEST", false]], "name": "Winding Purification"}, {"type": "hexcasting:pattern", "op_id": "hexbound:pattern/rotate", "anchor": "hexbound:pattern/rotate", "input": "pattern, num", "output": "pattern", "text": [["base", true], [[["para", {}], ["Removes a pattern and an integer from the stack and rotates the pattern the number of times given by the integer. Positive numbers rotate clockwise, while negative rotate counter-clockwise."]]]], "op": [["deeee", "WEST", false]], "name": "Revolving Distillation"}, {"type": "hexcasting:pattern", "op_id": "hexbound:pattern/merge", "anchor": "hexbound:pattern/merge", "input": "pattern, pattern", "output": "pattern", "text": [["base", true], [[["para", {}], ["Removes two patterns and merges them, as if first stroke of the second was drawn from the last point of the first. It appears if the result is longer than 128 strokes, its end will be lost entirely."]]]], "op": [["aqqqqa", "NORTH_WEST", false]], "name": "Painter's Distillation"}, {"type": "hexcasting:pattern", "op_id": "hexbound:pattern/head", "anchor": "hexbound:pattern/head", "input": "pattern, num", "output": "pattern", "text": [["base", true], [[["para", {}], ["Removes a pattern and a number N from the stack. N must be between 1 and the number of strokes in the removed pattern. Returns a pattern composed of the first N strokes of the removed pattern, preserving the original pattern's direction."]]]], "op": [["wqqqq", "EAST", false]], "name": "Starting Distillation"}, {"type": "hexcasting:pattern", "op_id": "hexbound:pattern/tail", "anchor": "hexbound:pattern/tail", "input": "pattern, num", "output": "pattern", "text": [["base", true], [[["para", {}], ["Removes a pattern and a number from the stack. Behaves exactly as Starting Distillation but takes the last strokes of the pattern instead of the first."]]]], "op": [["weeee", "WEST", false]], "name": "Ending Distillation"}], "id": "patterns/pattern_editing"}], "id": "patterns"}, {"name": "Spells", "icon": "minecraft:textures/item/enchanted_book.png", "description": [["base", true], [[["para", {}], ["Patterns and actions that perform a magical effect on the world."]]]], "parent": "hexcasting:patterns", "sortnum": 0, "entries": [{"name": "Memorizing Pigments", "category": "hexcasting:patterns/spells", "icon": "hexcasting:pride_colorizer_plural", "sortnum": 5.5, "advancement": "hexcasting:root", "read_by_default": true, "pages": [{"type": "patchouli:text", "text": [["base", true], [[["para", {}], ["The patterns in this chapter allow me to memorize ", [["color", "8d6acc"], [[["link", "hexcasting:items/pigments"], ["Pigments"]]]], " I have already Internalized."]], [["para", {}], ["Using these patterns associates a Pigment with a pattern of my choosing in my mind, allowing me to revert to it whenever I please. I will never run out of eggs again!"]]]]}, {"type": "hexcasting:pattern", "op_id": "hexbound:colorizer/save", "anchor": "hexbound:colorizer/save", "input": "pattern", "output": "", "text": [["base", true], [[["para", {}], ["Removes a pattern from the stack and associates my current Pigment with that pattern."]]]], "op": [["wqwawqqawddwqwede", "NORTH_EAST", false]], "name": "Memorize Pigment"}, {"type": "hexcasting:pattern", "op_id": "hexbound:colorizer/load", "anchor": "hexbound:colorizer/load", "input": "pattern", "output": "", "text": [["base", true], [[["para", {}], ["Removes a pattern from the stack and sets my current Pigment to the one I have associated with that pattern"]]]], "op": [["wqwawqqawddwqeqaq", "NORTH_EAST", false]], "name": "Recall Pigment"}, {"type": "hexcasting:pattern", "op_id": "hexbound:colorizer/delete", "anchor": "hexbound:colorizer/delete", "input": "pattern", "output": "", "text": [["base", true], [[["para", {}], ["Removes a pattern from the stack, and forgets the Pigment I have associated with that pattern."]]]], "op": [["wqwawqqawddwqwdd", "NORTH_EAST", false]], "name": "Forget Pigment"}], "id": "patterns/spells/colorizer_storage"}], "id": "patterns/spells"}, {"name": "Great Spells", "icon": "minecraft:textures/mob_effect/conduit_power.png", "description": [["base", true], [[["para", {}], ["The spells catalogued here are purported to be of legendary difficulty and power. They seem to have been recorded only sparsely (for good reason, the texts claim). It's probably just the hogwash of extinct traditionalists, though-- a pattern's a pattern. What could possibly go wrong?"]]]], "parent": "hexcasting:patterns", "sortnum": 1, "entries": [{"name": "Bind Figment", "category": "hexcasting:patterns/great_spells", "icon": "minecraft:spawner", "sortnum": 99, "advancement": "hexcasting:root", "pages": [{"type": "hexcasting:pattern", "op_id": "hexbound:set_fake_impetus_player", "anchor": "hexbound:set_fake_impetus_player", "input": "vector", "output": "", "text": [["base", true], [[["para", {}], ["Removes a vector from the stack and binds a ", [["link", "hexbound:casting/figments"], ["Figment"]], " to the block at the position represented by the vector.<br />I can't tell what the ", [["link", "hexbound:greatwork/impetus_figment"], ["target"]], " is supposed to be though."]]]], "op": [["qaqdaqwqaeedewd", "NORTH_EAST", false]], "name": "Bind Figment"}], "id": "patterns/great_spells/impetus_fake_player"}], "id": "patterns/great_spells"}, {"name": "Constructs", "icon": "minecraft:redstone_block", "description": [["base", true], [[["para", {}], ["The patterns in this chapter allow me to manipulate Constructs: living machines capable of carrying out my orders and even casting some limited ", [["color", "b38ef3"], ["Hexes"]], " on their own."]]]], "parent": "hexcasting:patterns", "sortnum": 2, "entries": [{"name": "Intro to Constructs", "category": "hexbound:patterns/constructs", "icon": "minecraft:redstone", "sortnum": 1, "advancement": "hexcasting:root", "pages": [{"type": "patchouli:text", "text": [["base", true], [[["para", {}], ["Constructs are a type of machine used by ", [["color", "b38ef3"], ["Hexbinders"]], " in ages past, and, following meticulous study of surviving blueprints, are now at my disposal."]]]]}, {"type": "patchouli:text", "text": [["base", true], [[["para", {}], ["What puts Constructs apart from simpler machines such as the Golems employed by villages of this world is their ability to process ", [["color", "b38ef3"], ["Hexes"]], " and use special patterns to interpret ", [["color", "b38ef3"], ["Hexes"]], " as physical actions to perform. While the limitations are many, these ", [["link", "hexbound:patterns/constructs/executing_commands"], ["''commands''"]], " allow me to encode as Construct instructions a variety of tasks I'd personally find too mundane or dangerous (unless I find myself getting attached to these inanimate objects)."]]]]}, {"type": "patchouli:text", "text": [["base", true], [[["para", {}], ["First, the limitations:<br />"]], [["para", {"clazz": "fake-li"}], ["Constructs are too sensitive to use their own ", [["color", "74b3f2"], ["media"]], " for casting ", [["color", "b38ef3"], ["Hexes"]], ". It should be assumed they do not possess any ", [["color", "74b3f2"], ["media"]], " to spend."]], [["para", {"clazz": "fake-li"}], ["Most patterns, especially Spells, directly affecting the outside world simply cannot be processed by their limited pseudo-minds."]], [["para", {"clazz": "fake-li"}], ["Said pseudo-minds behave as any other ", [["link", "hexbound:casting/figments"], ["Figment"]], ": ", [["link", "hexcasting:patterns/basics#hexcasting:get_caster"], ["Mind's Reflection"]], " will push ", [["color", "8d6acc"], [[["link", "hexcasting:casting/influences"], ["Null"]]]], ", ", [["link", "hexcasting:items/pigments"], ["Pigments"]], " and ", [["link", "hexcasting:patterns/spells/sentinels"], ["Sentinels"]], " will not function."]]]]}, {"type": "patchouli:text", "text": [["base", true], [[["para", {}], ["Now, for some details about the casting mechanism:<br />"]], [["para", {"clazz": "fake-li"}], ["Construct instructions are a list of iotas and are executed immediately after each other, not unlike those contained within ", [["link", "hexcasting:items/hexcasting"], ["Casting Items"]], "."]], [["para", {"clazz": "fake-li"}], ["Constructs start new instructions with an empty ", [["link", "hexcasting:casting/stack"], ["stack"]], " and ", [["link", "hexcasting:patterns/readwrite#hexcasting:local"], ["Ravenmind"]], "."]], [["para", {"clazz": "fake-li"}], ["Encountering a Mishap or an error in executing the command, cancels both the execution and any issued command, as well as clear the stack and Ravenmind."]]]]}, {"type": "hexcasting:pattern", "op_id": "hexbound:instructions/send", "input": "entity, [pattern]", "output": "", "text": [["base", true], [[["para", {}], ["Some basic patterns to close off the introduction. Remove a reference to a Construct and a list of patterns from the stack and send the list as instructions to the Construct."]]]], "anchor": "hexbound:instructions/send", "op": [["qaaq", "EAST", false]], "name": "Send Instructions"}, {"type": "hexcasting:pattern", "op_id": "hexbound:construct_get_self", "input": "", "output": "entity", "text": [["base", true], [[["para", {}], ["If executed by a Construct, puts a reference to it on the stack. Otherwise, causes a ", [["link", "hexcasting:casting/mishaps"], ["Mishap"]], ". Should be used instead of ", [["link", "hexcasting:patterns/basics#hexcasting:get_caster"], ["Mind's Reflection"]], " for ", [["color", "b38ef3"], ["Hexes"]], " executed by Constructs."]]]], "anchor": "hexbound:construct_get_self", "op": [["qaawedee", "EAST", false]], "name": "Automaton's Reflection"}], "id": "patterns/constructs/constructs_intro"}, {"name": "Executing Commands", "category": "hexbound:patterns/constructs", "icon": "minecraft:piston", "sortnum": 2, "advancement": "hexcasting:root", "pages": [{"type": "patchouli:text", "text": [["base", true], [[["para", {}], ["The core component of any ", [["color", "b38ef3"], ["Hex"]], " executed by a Construct will be its commands, however there is an issue that needs to be addressed first. Construct instructions, like ", [["link", "hexcasting:patterns/meta"], ["any ", [["color", "b38ef3"], ["Hex"]]]], " packaged into a list", ", execute instantly after each other. While normally not an issue, this causes multiple commands issued in a row to replace each other, not giving even the shortest ones a moment to be executed."]]]]}, {"type": "patchouli:text", "text": [["base", true], [[["para", {}], ["The solution lies in the last argument to any command pattern. Once the command has finished, the construct will execute the list passed to it next. Stack and ", [["link", "hexcasting:patterns/readwrite#hexcasting:local"], ["Ravenmind"]], " remain intact between these executions, and they can be chained to execute whole sequences of commands. However, each command will bring the spell closer to its execution limit, like ", [["link", "hexcasting:patterns/meta#hexcasting:eval"], ["Hermes' Gambit"]], " would."]]]]}, {"type": "patchouli:text", "text": [["base", true], [[["para", {}], ["Finally, a few notes on evaluating commands:<br />"]], [["para", {"clazz": "fake-li"}], ["Commands can only be evaluated by a Construct. Doing so myself will cause a ", [["link", "hexcasting:casting/mishaps"], ["Mishap"]], " to occur."]], [["para", {"clazz": "fake-li"}], ["Some commands require the Construct be able to perform certain actions like picking up items or harvesting crops. "]], [["para", {"clazz": "fake-li"}], ["Should I, eventually, discover a Construct incapable of such actions, evaluating such a command will cause a Mishap.                      "]], [["para", {"clazz": "fake-li"}], ["Some commands require the target be directly next to the Construct. I can expect about two blocks of leeway within which the Construct can figure the details out."]]]]}, {"type": "patchouli:text", "text": [["base", true], [[["para", {}], ["Should a Mishap or a command error occur, I can examine the Construct by using a ", [["link", "hexcasting:items/lens"], ["Scrying Lens"]], " on it while sneaking to find the issue."]], [["para", {}], ["Now, for the commands themselves."]]]]}, {"type": "hexcasting:pattern", "op_id": "hexbound:give_command/move_to", "input": "vector, [pattern]", "output": "", "text": [["base", true], [[["para", {}], ["Removes a vector from the stack and instructs the Construct to go to the position represented by that vector. The position must be within 32 blocks of the Construct."]]]], "anchor": "hexbound:give_command/move_to", "op": [["qaaqwdaqqqa", "EAST", false]], "name": "Command: Move To Position"}, {"type": "hexcasting:pattern", "op_id": "hexbound:give_command/pick_up", "input": "entity, [pattern]", "output": "", "text": [["base", true], [[["para", {}], ["Removes an entity representing a dropped item from the stack and instructs the Construct to pick it up. The item must be next to the Construct, the construct must be able to pick items up and not be carrying one already."]]]], "anchor": "hexbound:give_command/pick_up", "op": [["eddeawaw", "EAST", false]], "name": "Command: Pick Up Item"}, {"type": "hexcasting:pattern", "op_id": "hexbound:give_command/drop_off", "input": "[pattern]", "output": "", "text": [["base", true], [[["para", {}], ["Instructs the Construct to drop the item it is currently carrying. The construct must be able carrying an item."]]]], "anchor": "hexbound:give_command/drop_off", "op": [["qaaqdwdw", "EAST", false]], "name": "Command: Drop Item"}, {"type": "hexcasting:pattern", "op_id": "hexbound:give_command/harvest", "input": "vector, [pattern]", "output": "", "text": [["base", true], [[["para", {}], ["Removes a vector from the stack and instructs the Construct to harvest crops or berries at the position represented by that vector. If harvesting the block destroys it, it will be replanted by the Construct. The position must be next to the Construct, and the Construct must be capable of interacting with the world."]]]], "anchor": "hexbound:give_command/harvest", "op": [["qaaqqedwed", "EAST", false]], "name": "Command: Harvest"}, {"type": "hexcasting:pattern", "op_id": "hexbound:give_command/use/block", "input": "vector, vector, [pattern]", "output": "", "text": [["base", true], [[["para", {}], ["Removes two vectors from the stack and instructs the Construct to use the currently held item, if any, on the block represented by the first vector."]]]], "anchor": "hexbound:give_command/use/block", "op": [["qaaqdee", "EAST", false]], "name": "Command: Use On Block"}, {"type": "patchouli:text", "text": [["base", true], [[["para", {}], ["If the second vector is not zero, the block is used from the side indicated by it. If it is zero, it will be used from the side closest to the Construct. The position must be next to the Construct, the Construct must be capable of carrying items, and interacting with the world."]]]]}], "id": "patterns/constructs/executing_commands"}, {"name": "Spider Constructs", "category": "hexbound:patterns/constructs", "icon": "hexbound:spider_construct_core", "sortnum": 3, "advancement": "hexcasting:root", "pages": [{"type": "patchouli:text", "text": [["base", true], [[["para", {}], ["After careful study, experimentation, and filling in both figurative and literal holes in what blueprints I could find, I believe I'm ready to create a Construct of my own."]], [["para", {}], ["Spider Constructs, as I've taken to calling them, are small, but nimble assistants capable of interacting with their surroundings, and carrying items."]]]]}, {"type": "patchouli:text", "text": [["base", true], [[["para", {}], ["One of the blueprints contained an alternate design for this Construct, which I replicated as best I could. The two designs can be switched by using an Iron Block or Amethyst Block on the Construct while sneaking or, should I find the Spider form not to my taste, by enabling a form of perception filter in configuration files to make all Constructs appear to me as their alternate design."]]]]}, {"type": "patchouli:crafting", "recipe": "hexbound:spider_construct_core", "title": "Spider Construct Core", "text": [["base", true], [[["para", {}], ["The first of the three components required to create this Construct is the Core, a composite of the lenses, motivators, and inert ", [["color", "74b3f2"], ["media"]], " required for the Construct's base form."]]]], "item_name": ["Spider Construct Core"]}, {"type": "patchouli:crafting", "recipe": "hexbound:spider_construct_battery", "title": "Spider Construct Battery", "text": [["base", true], [[["para", {}], ["The battery is the second component. While already made of a fair amount of ", [["color", "74b3f2"], ["media"]], ", it will have to be amplified further. Standard usage of ", [["link", "hexcasting:patterns/spells/hexcasting#hexcasting:recharge"], ["Recharge"]], " will do, and I will be able to see the amount of ", [["color", "74b3f2"], ["Amethyst Dust"]], " required on the battery itself."]]]], "item_name": ["Spider Construct Battery"]}, {"type": "patchouli:text", "text": [["base", true], [[["para", {}], ["Some notes on the final component. The evidence I found clearly shows it is meant to be created artificially, but is not detailed enough to do so.<br />Fortunately, I managed to work a replacement into the process: a living Allay. A creature well-attuned to ", [["color", "74b3f2"], ["media"]], " and already capable of carrying items makes this process almost too easy."]], [["para", {}], ["Sometimes I wonder if the Allay's fate should concern me more than a passing thought."]]]]}, {"type": "hexcasting:pattern", "op_id": "hexbound:create_construct/spider", "input": "entity, entity, entity", "output": "", "text": [["base", true], [[["para", {}], ["The inputs represent, starting from deepest on the stack, the Allay, a dropped Core, and a dropped fully-charged Battery. The items are consumed, and the Allay is converted into a Construct."]]]], "anchor": "hexbound:create_construct/spider", "op": [["wqwqwwqwqwqwwaeqaqdwdqaqe", "SOUTH_WEST", false]], "name": "Create Spider Construct"}], "id": "patterns/constructs/spider_construct"}, {"name": "Binding and Broadcasting", "category": "hexbound:patterns/constructs", "icon": "hexbound:construct_broadcaster", "sortnum": 4, "advancement": "hexcasting:root", "pages": [{"type": "patchouli:text", "text": [["base", true], [[["para", {}], ["I have run into several problems issuing orders to my Constructs: controlling several of them requires I pass orders to each individually, it is quite challenging to send order to only some of the Constructs in an area, and, finally, it occurred to me other ", [["color", "b38ef3"], ["Hexcasters"]], " can order my Constructs to do anything they please!"]]]]}, {"type": "patchouli:crafting", "recipe": "hexbound:construct_broadcaster", "title": "Construct Broadcaster", "text": [["base", true], [[["para", {}], ["The Construct Broadcaster is a small structure capable of broadcasting my orders 16 blocks around itself, solving the first two of my issues."]]]], "item_name": ["Construct Broadcaster"]}, {"type": "hexcasting:pattern", "op_id": "hexbound:instructions/broadcast", "input": "vector, [pattern]", "output": "", "text": [["base", true], [[["para", {}], ["Removes a vector and a list of patterns. Broadcasts the list as instructions through the Broadcaster located at the indicated position."]]]], "anchor": "hexbound:instructions/broadcast", "op": [["qqaaqqqqwq", "SOUTH_EAST", false]], "name": "Broadcast Instructions"}, {"type": "patchouli:text", "text": [["base", true], [[["para", {}], ["Broadcasting orders should save me from a few headaches in the long run, even if the range is still limited. However that is not all: a ", [["link", "hexcasting:items/slate"], ["Slate"]], " containing a pattern can be placed in front of the Broadcaster, associating the instructions sent through it with that pattern."]], [["para", {}], ["To make use of that association, a Construct must be bound to a pattern."]]]]}, {"type": "hexcasting:pattern", "op_id": "hexbound:bind_construct", "input": "pattern | entity | null", "output": "", "text": [["base", true], [[["para", {}], ["Removes a reference to a player, a pattern, or ", [["color", "8d6acc"], [[["link", "hexcasting:casting/influences"], ["Null"]]]], " from the stack, and binds the Construct to it."]]]], "anchor": "hexbound:bind_construct", "op": [["wqaawddewdwewewewewew", "EAST", false]], "name": "Artificer's Gambit"}, {"type": "patchouli:text", "text": [["base", true], [[["para", {}], ["If bound to a pattern, the Construct will ignore broadcast orders (but not direct orders!) unless they are associated with the same pattern."]], [["para", {}], ["If bound to a player, the Construct will refuse orders, direct or broadcast, from anyone other than that player."]], [["para", {}], ["Finally, passing ", [["color", "8d6acc"], [[["link", "hexcasting:casting/influences"], ["Null"]]]], " removes both the pattern and the player the Construct is bound to."]]]]}], "id": "patterns/constructs/bind_broadcast"}, {"name": "Selecting Constructs", "category": "hexbound:patterns/constructs", "icon": "minecraft:wandering_trader_spawn_egg", "sortnum": 5, "advancement": "hexcasting:root", "pages": [{"type": "hexcasting:pattern", "op_id": "hexbound:get_entity/construct", "input": "vector", "output": "entity or null", "text": [["base", true], [[["para", {}], ["Transform the position on the stack into the Construct at that location (or ", [["link", "hexbound:casting/influences"], [[["color", "8d6acc"], ["Null"]]]], " if there isn't one)."]]]], "anchor": "hexbound:get_entity/construct", "op": [["qqqqqdaqaawedde", "SOUTH_EAST", false]], "name": "Entity Purification: Construct"}, {"type": "hexcasting:pattern", "op_id": "hexbound:zone_entity/construct", "input": "vector, number", "output": "list", "text": [["base", true], [[["para", {}], ["Take a position and maximum distance on the stack, and combine them into a list of Constructs near the position."]]]], "anchor": "hexbound:zone_entity/construct", "op": [["qqqqqwdeddwedde", "SOUTH_EAST", false]], "name": "Zone Distillation: Construct"}, {"type": "hexcasting:pattern", "op_id": "hexbound:instructions/send", "input": "vector, number", "output": "list", "text": [["base", true], [[["para", {}], ["Take a position and maximum distance on the stack, and combine them into a list of non-Construct entities near the position."]]]], "anchor": "hexbound:instructions/send", "op": [["qaaq", "EAST", false]], "name": "Send Instructions"}], "id": "patterns/constructs/selecting_constructs"}], "id": "patterns/constructs"}]